Game programming - WikipediaGame programmingFrom Wikipedia the free encyclopediaJump to navigationJump to searchThis article is about programming video games For a broader overview of the subject see video game developmentPart of a series on theVideo game industryActivitiesjobsVideo game designGame designGame art designGame development  Game developerGame modificationGame producerGame programming  Game programmerGame publisherGame studiesGame testingGame journalismLevel designDevelopmentGame AIGame designInteraction designGame programmingLevel designVideo game artVideo game designVideo game graphicsVideo game musicTypesAdult gameCasual gameIndie gameNon-gameInteractive artInteractive movieNonviolent video gameSerious gameAdvergameArt gameEdugameExergameTopicsDigital rights management DRMOutsourcingSoftware licenseEnd-user license agreement EULAVideo game preservationRelatedVideo gameHistory of video gamesListsList of indie game developersList of video game developersList of video game industry peopleList of video game publishersList of video game websitesvteGame programming a subset  of game development is the software development of video games Game programming requires substantial skill in software engineering and computer programming in a given language as well as specialization in one or more of the following areas simulation computer graphics artificial intelligence physics audio programming and input  For massively multiplayer online gamesMMOG knowledge of additional areas such as network programming and database programming is requisite Though often engaged in by professional game programmers some may program games as a hobbyContents1 Development process11 Prototyping12 Game design13 Production14 Testing15 Nearing completion16 Maintenance17 Duration2 Tools21 Programming languages22 APIs and libraries221 Graphic APIs222 Other APIs3 Game structure4 Hobbyists5 See also6 References7 External links71 WikisDevelopment processeditProfessional game development usually begins with a game design which itself has several possible origins Occasionally the game development process starts with no clear design in mind but as a series of experiments For example game designer Will Wright began development of The Sims by getting programmers to experiment with several ideasPrototypingeditProgrammers are often required to produce prototypes of gameplay ideas and features A great deal of prototyping may take place during pre-production before the design document is complete and may help determine what features the design specifiesPrototypes are developed quickly with very little time for up-front design and mostly act as a proof of concept or to test ideas They are not expected to work flawlessly but are developed to try out new sometimes exotic ideasGame designeditMain article Game designThough the programmers main job is not to develop the game design the programmers often contribute to the design as do game artists The game designer will solicit input from both the producer and the art and programming lead for ideas and strategies for the game design  Often individuals in non-lead positions also contribute such as copywriters and other programmers and artistsProgrammers often closely follow the game design document As the game development progresses the design document changes as programming limitations and new capabilities are discovered and exploitedProductioneditDuring production programmers may create a great deal of source code to create the game described in the games design document Along the way the design document is modified to meet limitations or expanded to exploit new features The design document is very much a living document much of whose life is dictated by programmers schedules talent and resourcefulnessWhile many programmers have some say in a games content most game producers solicit input from the lead programmer as to the status of a game programming development The lead is responsible for knowing the status of all facets of the games programming and for pointing out limitations The lead programmer may also pass on suggestions from the programmers as to possible features theyd like to implementWith todays visually rich content the programmer must often interact with the art staff This very much depends on the programmers role of course For example a 3D graphics programmer may need to work side by side with the games 3D modelers discussing strategies and design considerations while an AI programmer may need to interact very little if at all with the art staff To help artists and level designers with their tasks programmers may volunteer or be called upon to develop tools and utilities Many of these may be for a specific purpose and can be buggy due to time constraints time for development of such tools is often not included in a games schedule as well as because they are only for in-house use anyway Many game tools are developed in RAD languages for quicker development and may be discarded after the completion of the gameTestingeditMain article Game testingThe formal quality assurance testing process performed by professional game testers begins well into game development High-budget titles may begin testing with the first playable alpha while low-budget and casual games might not enter testing until a release candidate is ready The programmers task is to fix errors and bugs as such are discovered by the QA teamsNearing completioneditFinal tasks include polishing the game such as programmers fixing occasional bugsfrom minor to catastrophicthat may arise during the last phases of testingGame developers may have a beta testing period but the definition of such varies from developer to developer  Often a beta contains all of the games features but may have a few bugs or incomplete content Few games are given a public beta period for example to measure stress tolerance for game serversWhen the game is deemed complete it is said to have gone gold and is shipped off to the publisher Depending on circumstances the publisher may then subject it to its own quality assurance or may begin pressing the game from the gold masterMaintenanceeditOnce a game ships the maintenance phase for the video game begins Programmers wait for a period to get as many bug reports as possible Once the developer thinks theyve obtained enough feedback the programmers start working on a patch The patch may take weeks or months to develop but its intended to fix most bugs and problems with the game Occasionally a patch may include extra features or content or may even alter gameplayDurationeditMost modern games take from one to three years to complete The length of development depends on a number of factors but programming is required throughout all phases of development except the very early stages of game designToolseditLike other software game development programs are generated from source code to the actual program called the executable by a compiler  Source code can be developed with almost any text editor but many professional game programmers use a full integrated development environment Once again which IDE one uses depends on the target platformIn addition to IDEs many game development companies create custom tools developed to be used in-house Some of these include prototypes and asset conversion tools programs that change artwork for example into the games custom format Some custom tools may even be delivered with the game such as a level editorGame development companies are often very willing to spend thousands of dollars to make sure their programmers are well equipped with the best tools A well outfitted programmer may have two to three development systems and multiple monitors dominating their office or cubicleProgramming languageseditLanguageFeaturesAssemblyPotentially minimal CPU overheadCWidely known widely portable numerous APIs compiles to machine codeCObject-oriented widely known numerous APIs compiles to machine codeJavaObject-oriented garbage-collected widely portable via a virtual machineC Visual Basic NET etcObject-oriented garbage-collected interfaces with Microsoft productsObjective-C SwiftObject-oriented interfaces with Apple productsLua Python JavaScript Tcl etcFamiliar syntax easily embedded in the above languages often used for scriptingLisp Pascal Perl Smalltalk etcFringe game languages although bindings to popular libraries are commonOnce the games initial design has been agreed upon the development language must be decided upon The choice depends upon many factors such as language familiarity of the programming staff target platforms the execution speed requirements and the language of any game engines APIs or libraries being usedFor personal computers the language selected may be little more than a matter of preference Language bindings for popular libraries such as SDL and Allegro are widespread12 and the performance gap between idiomatic code written in modern compiled languages is negligible34 The most popular languages are usually proceduralobject-oriented and implemented via compilers for example C5 C56 and Java7 However developers may take into account domain-specific features such as interfacing with the operating system and resilience to reverse engineering for online video games8 Many games are not written in one language exclusively and may combine two or more languages For example Unity a popular game engine has different pieces written in C C and CFor consoles the support of the target platform is usually the most considered factor In the past video games for consoles were written almost exclusively in assembly due to limited resources in terms of both storage and processing speed9 However as technology has advanced so have the options for game development on consoles Nintendo10 Microsoft and Sony11 all have differing SDKs for their Wii U Nintendo Switch Xbox One and PlayStation 4 consoles respectivelyHigh-level scripting languages are increasingly being used as embedded extensions to the underlying game written in a compiled programming language for the convenience of both the original developer and anyone who would wish to mod the game Lua is a very popular choice as its API is written in ANSI C and the language is designed to be embedded into other applications612 Many developers have created custom languages altogether for their games such as id Softwares QuakeC and Epic Games UnrealScriptAPIs and librarieseditA key decision in game programming is which if any APIs and libraries to use Today there are numerous libraries available which take care of key tasks of game programming Some libraries can handle sound processing input and graphics rendering Some can even handle some AI tasks such as pathfinding There are even entire game engines that handle most of the tasks of game programming and only require coding game logicWhich APIs and libraries one chooses depends largely on the target platform For example libraries for PlayStation 2 development may not be available for Microsoft Windows and vice versa However there are game frameworks available that allow or ease cross-platform development so programmers can program a game in a single language and have the game run on several platforms such as the Wii PlayStation 3 Xbox 360 PSP and Microsoft WindowsGraphic APIseditGraphics API usage across Operating SystemsOSVulkanDirect XGNMXMetalWindows 10yesyesnonoMacMoltenVKnonoyesGNULinuxyesnononoAndroidyesyesyesyesiOSMoltenVKyesyesyesyesTizenin DevnononoSailfishin DevnononoXbox OnenonononoOrbis OS PS4nonononoNintendo SwitchnonononoToday graphics are a key defining feature of most games While 2D graphics used to be the norm for games released through the mid-1990s most AAA games now boast full 3D graphics even for games which are largely 2D in nature such as Civilization III However purely 2D graphics have experienced a Renaissance with indie games13A well established personal computer platform is Microsoft Windows Since it came pre-installed on almost ninety percent of PCs sold it now has the largest user basecitation needed The two most popular 3D graphics APIs for Microsoft Windows are Direct3D and OpenGL The benefits and weaknesses of each API are hotly debated among Windows game programmersCurrently the most popular Computing platform is Google Android Since it comes pre-installed on almost eighty percent of Smartphones sold Android has the second largest user base and increasing Android uses OpenGL ES  Vulkan APIDirectX is a collection of game APIs Direct3D is DirectXs 3D API Direct3D is freely available from Microsoft as are the rest of the DirectX APIs Microsoft developed DirectX for game programmers and continues to add features to the API The DirectX specification is not controlled by an open arbitration committee and Microsoft is free to add remove or change features Direct3D is not portable it is designed specifically for Microsoft Windows and no other platform though a form of Direct3D is used on Microsofts Xbox Windows Phone 75 smartphones and mobile devices which run the Pocket PC operating systemOpenGL is a portable API specification Code written with OpenGL is easily ported between platforms with a compatible implementation For example Quake II which uses OpenGL was ported from Windows to Linux by a fan of the game OpenGL is a standard maintained by the OpenGL Architecture Review Board ARB The ARB meets periodically to update the standard by adding emerging support for features of the latest 3D hardware Since it is standards based and has been around the longest OpenGL is used by and taught in colleges and universities around the worldcitation needed In addition the development tools provided by the manufacturers of some video game consoles such as the Nintendo GameCube the Nintendo DS and the PSP use graphic APIs that resemble OpenGL OpenGL often lags behind on feature updates due to the lack of a permanent development team and the requirement that implementations begin development after the standard has been published Programmers who choose to use it can access some hardwares latest 3D features but only through non-standardized extensions The situation may change in the future as the OpenGL architecture review board ARB has passed control of the specification to the Khronos Group in an attempt to counter the problem14Other APIseditFor development on Microsoft Windows the various APIs of DirectX may be used for input sound effects music networking and the playback of videos  Many commercial libraries are available to accomplish these tasks but since DirectX is available for free it is the most widely usedFor console programming the console manufacturers provide facilities for rendering graphics and the other tasks of game development The console manufacturers also provide complete development systems without which one cannot legally market nor develop games for their system Third-party developers also sell toolkits or libraries that ease the development on one or more of these tasks or provide special benefits such as cross-platform development capabilitiesGame structureeditThe central component of any game from a programming standpoint is the game loop The game loop allows the game to run smoothly regardless of a users input or lack thereofMost traditional software programs respond to user input and do nothing without it For example a word processor formats words and text as a user types If the user doesnt type anything the word processor does nothing Some functions may take a long time to complete but all are initiated by a user telling the program to do somethingGames on the other hand must continue to operate regardless of a users input The game loop allows this A highly simplified game loop in pseudocode might look something like thiswhile user does not exit    check for user input    run AI    move enemies    resolve collisions    draw graphics    play soundsend whileThe loop may be refined and modified as game development progresses but most games are based on this basic idea15Game loops differ depending on the platform they are developed for For example games written for DOS and many consoles can dominate and exploit available processing resources without restraint However games for a modern PC operating system such as Microsoft Windows must operate within the constraints of the process scheduler Some modern games run multiple threads so that for example the computation of character AI can be decoupled from the generation of smooth motion within the game This has the disadvantage of slightly increased overhead but the game may run more smoothly and efficiently on hyper-threading or multicore processors and on multiprocessor platforms With the computer industrys focus on CPUs with more cores that can execute more threads this is becoming increasingly important Consoles like the Xbox 360 and PlayStation 3 already have more than one core per processor and execute more than one thread per coreHobbyistseditThe only platforms widely available for hobbyists to program are consumer operating systems such as Android iOS Windows Mac Linux etc This is because development on game consoles requires special development systems that cost thousands of dollars Often these must be obtained from the console manufacturer and are only sold or leased to professional game development studios However Microsoft used to distribute a game development framework XNA which runs on both Microsoft Windows and Xbox 360 XNA was discontinued but other projects like MonoGame and SharpDX are trying to allow the same access for game coding Lately Android is the most popular hobbyist platform of choice for mobile developers16 Some hobbyists also develop homebrew games especially for handheld systems or modded consolesSome software engineering students program games as exercises for learning a programming language or operating systemSome hobbyists may use software packages that help with game development such as Adobe Flash Unity Android Studio pygame Adventure Game Studio GameMaker Studio Godot Unreal Engine or ConstructSee alsoeditVideo games portalList of gaming topicsReferencesedit SDL Language Bindings Retrieved 2015-11-08 Allegro - Language bindings Retrieved 2015-11-08 Corlan Alexandru-Dan 2003 Programming language benchmarks Retrieved 2015-11-08 Corlan Alexandru-Dan 2011-06-11 Programming Languages Benchmarks Retrieved 2015-11-08 a b Corlan Alexandru-Dan 2011 Game Programming in C and C Retrieved 2015-11-08 a b DeLoura Mark 2009-03-05 The Engine Survey General results Retrieved 2015-11-08 Corlan Alexandru-Dan LWJGL - Projects Archived from the original on 2015-11-10 Retrieved 2015-11-08 No Bugs Hare Chapter Vb from DevelopmentDeployment of MMOG Hyde Randy 1985 Using 6502 Assembly Language Helgason David November 2 2012 Game developers start your Unity 3D engines GamesBeat Interview Interviewed by Dean Takahashi VentureBeat Retrieved July 13 2014 Phoronix Why Sony Is Using LLVMClang On The PlayStation 4 Phoronixcom Retrieved 17 November 2014 Corlan Alexandru-Dan 2015-03-24 Lua Uses Archived from the original on 2019-07-24 Retrieved 2015-11-08 Why Are Most Indie Games 2D Instead of 3D Rampant Games 2013-05-16 Retrieved 2017-01-01 Khronos Places OpenGL and OpenGL ES Conformance Tests into Open Source Khronos Group Press Release Archived from the original on 2008-05-03 Programming Linux Games Chapter 1 ISBN1-886411-48-4 Report 79 Of Mobile Developers Prefer To Build For Android 29 August 2016External linkseditGameDevnet a leading resource for game developmentInternational Game Developers Association IGDAGame Development for Software Engineers a short 5 day short course offered by MIT with guidance from the mentors of the award-winning MIT Game LabOne ex-game programmers experience in the game development industryGame industry veteran Tom Slopers advice on game programmingWikisedit2D Game Development wikiGame Development Wiki -GDwikiimg srcenwikipediaorgwikiSpecialCentralAutoLoginstarttype1x1 alt title width1 height1 styleborder none position absolute Retrieved from httpsenwikipediaorgwindexphptitleGameprogrammingoldid933244001Categories Video game developmentHidden categories All articles with unsourced statementsArticles with unsourced statements from May 2015Articles with unsourced statements from April 2007Navigation menuPersonal toolsNot logged inTalkContributionsCreate accountLog inNamespacesArticleTalkVariantsViewsReadEditView historyMoreSearchNavigationMain pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia storeInteractionHelpAbout WikipediaCommunity portalRecent changesContact pageToolsWhat links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this pagePrintexportCreate a bookDownload as PDFPrintable versionLanguagesDeutschEspaolFranaisPolskiPortugusSvenskaEdit links This page was last edited on 30 December 2019 at 1952UTCText is available under the Creative Commons Attribution-ShareAlike Licenseadditional terms may apply  By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non-profit organizationPrivacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersStatisticsCookie statementMobile view